{"version":3,"file":"static/js/190.79939000.chunk.js","mappings":"iSAEaA,EAAOC,EAAAA,GAAAA,GAAH,0HACC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGRC,EAAOJ,EAAAA,GAAAA,GAAH,uGAGI,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITE,EAAQL,EAAAA,GAAAA,GAAH,iDACC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SCZPG,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA4BL,GAA5B,kGAE8BM,EAAAA,GAAmBN,GAFjD,gBAEYO,EAFZ,EAEYA,QACRH,EAAWG,GAHf,gDAKIC,QAAQC,IAAR,MALJ,yDADc,yBAAC,SAAD,2BASdC,CAAaV,EACd,GAAE,CAACA,KAGF,8BACGG,EAAQQ,OAAS,GAChB,SAACnB,EAAD,UACGW,EAAQS,KAAI,SAAAC,GAAI,OACf,UAAChB,EAAD,YACE,UAACC,EAAD,sBAAgBe,EAAKC,WACrB,uBAAID,EAAKE,YAFAF,EAAKC,OADD,MAQnB,8CAIP,C","sources":["pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Item = styled.li`\n  list-style: square;\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'services/api';\nimport { List, Item, Title } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchReviews(movieId) {\n      try {\n        const { results } = await API.getMovieReview(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <List>\n          {reviews.map(item => (\n            <Item key={item.author}>\n              <Title>Author: {item.author}</Title>\n              <p>{item.content}</p>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        'We do not have any reviews for this movie.'\n      )}\n    </>\n  );\n};\n"],"names":["List","styled","p","theme","space","Item","Title","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","API","results","console","log","fetchReviews","length","map","item","author","content"],"sourceRoot":""}