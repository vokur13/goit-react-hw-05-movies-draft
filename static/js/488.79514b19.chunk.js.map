{"version":3,"file":"static/js/488.79514b19.chunk.js","mappings":"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","sources":["components/MovieOverview/MovieOverview.styled.jsx","components/MovieOverview/MovieOverview.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GenreList = styled.ul`\n  display: flex;\n`;\n\nexport const GenreItem = styled.li`\n  &:not(:last-child) {\n    margin-right: ${p => p.theme.space[2]}px;\n  }\n`;\n","import { format } from 'date-fns';\nimport { Box } from 'components/Box';\nimport { GenreList, GenreItem } from './MovieOverview.styled';\n\nexport const MovieOverview = ({ movie }) => {\n  const releaseDate = format(new Date(movie.release_date), 'yyyy');\n\n  return (\n    <>\n      <Box display=\"grid\" gridTemplateColumns=\"1fr 5fr\">\n        <Box>\n          <img\n            // src={'http://image.tmdb.org/t/p/w780${movie.poster_path'}\n            src=\"http://image.tmdb.org/t/p/w780{movie.poster_path}\"\n            // src=\"https://image.tmdb.org/t/p/original/\"\n            alt={movie.title}\n          ></img>\n        </Box>\n        <Box display=\"grid\" gridTemplateRows=\"auto\">\n          <h2>\n            {movie.title} ({releaseDate})\n          </h2>\n          <p>User Score: {movie.vote_average}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <GenreList>\n            {movie.genres.map(genre => (\n              <GenreItem key={genre.name}>{genre.name}</GenreItem>\n            ))}\n          </GenreList>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavItem = styled(NavLink)`\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.text};\n    list-style: square;\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[0]}px;\n\n  &.active {\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n\nexport const List = styled.ul`\n  display: 'flex';\n  flex-direction: 'column';\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n`;\n","import { useLocation, useParams } from 'react-router-dom';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { Box } from 'components/Box';\nimport { Suspense, useEffect, useState } from 'react';\nimport * as API from 'services/api';\nimport { MovieOverview } from 'components/MovieOverview';\nimport { NavItem } from './MovieDetails.styled';\n\nconst navItems = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  // const [poster, setPoster] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchAssetsByID(movieId) {\n      try {\n        const data = await API.getMovieByID(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchAssetsByID(movieId);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n  console.log(movie.belongs_to_collection.poster_path);\n\n  // useEffect(() => {\n  //   async function fetchMoviePoster(movieId) {\n  //     try {\n  //       const dataPoster = await API.getMoviePoster(movieId);\n  //       console.log('dataPoster', dataPoster);\n  //       setPoster(dataPoster);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   }\n  //   fetchMoviePoster(movieId);\n  // }, [movieId]);\n\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <Box>\n      <NavLink to={backLink}>Go back</NavLink>\n      {movie ? <MovieOverview movie={movie} /> : null}\n      <Box mb={3}>Additional information</Box>\n      <Box as=\"ul\" display=\"flex\" flexDirection=\"column\">\n        {navItems.map(({ href, text }) => (\n          <NavItem key={href} to={href} state={{ from: location }}>\n            {text}\n          </NavItem>\n        ))}\n      </Box>\n      <Suspense fallback={<h1>Movie Details to be appeared</h1>}>\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n"],"names":["GenreList","styled","GenreItem","p","theme","space","MovieOverview","movie","releaseDate","format","Date","release_date","Box","display","gridTemplateColumns","src","alt","title","gridTemplateRows","vote_average","overview","genres","map","genre","name","NavItem","NavLink","colors","text","primary","navItems","href","MovieDetails","movieId","useParams","useState","setMovie","location","useLocation","useEffect","API","data","console","log","fetchAssetsByID","belongs_to_collection","poster_path","backLink","state","from","to","mb","as","flexDirection","Suspense","fallback"],"sourceRoot":""}